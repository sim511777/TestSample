<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{80db41c6-cb57-4280-9435-e9155e0ad46d}</ProjectGuid>
    <RootNamespace>TestSample</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <TargetName>TestSample</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <TargetName>TestSample</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <TargetName>TestSample</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <TargetName>TestSample</TargetName>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;TESTSAMPLE_EXPORTS;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableUAC>false</EnableUAC>
    </Link>
    <PostBuildEvent>
      <Command>echo ==== Post-Build Event - start ====
set lib_out_dir=..\Library\$(TargetName)
set h=%lib_out_dir%\$(TargetName).h
set lib=%lib_out_dir%\$(TargetName).lib
set dll=%lib_out_dir%\$(TargetName).dll

echo %lib_out_dir% 생성
if not exist %lib_out_dir% (
  mkdir %lib_out_dir%
)

echo %h% 복사
copy $(TargetName).h %h%

echo %lib% 복사
copy $(OutDir)$(TargetName).lib %lib%

echo %dll% 복사
copy $(OutDir)$(TargetName).dll %dll%
echo ==== Post-Build Event - end ====</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>echo ==== Pre-Build Event - start ====
set lib_out_dir=..\Library\$(TargetName)

echo %lib_out_dir% 폴더 파일 삭제
if exist %lib_out_dir% (
  del /q %lib_out_dir%\*.*
)
echo ==== Pre-Build Event - end ====</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;TESTSAMPLE_EXPORTS;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableUAC>false</EnableUAC>
    </Link>
    <PostBuildEvent>
      <Command>echo ==== Post-Build Event - start ====
set lib_out_dir=..\Library\$(TargetName)
set h=%lib_out_dir%\$(TargetName).h
set lib=%lib_out_dir%\$(TargetName).lib
set dll=%lib_out_dir%\$(TargetName).dll

echo %lib_out_dir% 생성
if not exist %lib_out_dir% (
  mkdir %lib_out_dir%
)

echo %h% 복사
copy $(TargetName).h %h%

echo %lib% 복사
copy $(OutDir)$(TargetName).lib %lib%

echo %dll% 복사
copy $(OutDir)$(TargetName).dll %dll%
echo ==== Post-Build Event - end ====</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>echo ==== Pre-Build Event - start ====
set lib_out_dir=..\Library\$(TargetName)

echo %lib_out_dir% 폴더 파일 삭제
if exist %lib_out_dir% (
  del /q %lib_out_dir%\*.*
)
echo ==== Pre-Build Event - end ====</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;TESTSAMPLE_EXPORTS;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableUAC>false</EnableUAC>
    </Link>
    <PostBuildEvent>
      <Command>echo ==== Post-Build Event - start ====
set lib_out_dir=..\Library\$(TargetName)
set h=%lib_out_dir%\$(TargetName).h
set lib=%lib_out_dir%\$(TargetName).lib
set dll=%lib_out_dir%\$(TargetName).dll

echo %lib_out_dir% 생성
if not exist %lib_out_dir% (
  mkdir %lib_out_dir%
)

echo %h% 복사
copy $(TargetName).h %h%

echo %lib% 복사
copy $(OutDir)$(TargetName).lib %lib%

echo %dll% 복사
copy $(OutDir)$(TargetName).dll %dll%
echo ==== Post-Build Event - end ====</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>echo ==== Pre-Build Event - start ====
set lib_out_dir=..\Library\$(TargetName)

echo %lib_out_dir% 폴더 파일 삭제
if exist %lib_out_dir% (
  del /q %lib_out_dir%\*.*
)
echo ==== Pre-Build Event - end ====</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;TESTSAMPLE_EXPORTS;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableUAC>false</EnableUAC>
    </Link>
    <PostBuildEvent>
      <Command>echo ==== Post-Build Event - start ====
set lib_out_dir=..\Library\$(TargetName)
set h=%lib_out_dir%\$(TargetName).h
set lib=%lib_out_dir%\$(TargetName).lib
set dll=%lib_out_dir%\$(TargetName).dll

echo %lib_out_dir% 생성
if not exist %lib_out_dir% (
  mkdir %lib_out_dir%
)

echo %h% 복사
copy $(TargetName).h %h%

echo %lib% 복사
copy $(OutDir)$(TargetName).lib %lib%

echo %dll% 복사
copy $(OutDir)$(TargetName).dll %dll%
echo ==== Post-Build Event - end ====</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>echo ==== Pre-Build Event - start ====
set lib_out_dir=..\Library\$(TargetName)

echo %lib_out_dir% 폴더 파일 삭제
if exist %lib_out_dir% (
  del /q %lib_out_dir%\*.*
)
echo ==== Pre-Build Event - end ====</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <None Include="cpp.hint" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="framework.h" />
    <ClInclude Include="TestSample.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="dllmain.cpp" />
    <ClCompile Include="TestSample.cpp" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>